import asyncio
from telegram import Bot
from telegram.ext import ApplicationBuilder, MessageHandler, filters
from telegram.request import HTTPXRequest
from keys import TELEGRAM_BOT_TOKEN, CHAT_ID
from image.image_fetcher import fetch_image
from content_generator import generate_post, split_text_by_paragraphs
from analytics import get_most_popular_topic
from handlers import handle_mention, handle_reactions
from image.keyword_extractor import extract_keywords
from logger import log_info, log_warning, log_error  # ‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

# ‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –¥–ª—è Telegram API
request = HTTPXRequest(pool_timeout=30)
bot = Bot(token=TELEGRAM_BOT_TOKEN, request=request)

# ‚úÖ –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram
application = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_mention))
application.add_handler(MessageHandler(filters.ALL, handle_reactions))


async def post_to_telegram():
    """üì¢ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞ –≤ Telegram: –ö–∞—Ä—Ç–∏–Ω–∫–∞ + –∑–∞–≥–æ–ª–æ–≤–æ–∫, –∑–∞—Ç–µ–º —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Ç–µ–º—ã"""

    # ‚úÖ –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ç–µ–º—É –ø–æ—Å—Ç–∞
    popular_topic = get_most_popular_topic()
    post_text = generate_post(topic=popular_topic)

    # ‚úÖ –†–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å
    title, body_parts = split_text_by_paragraphs(post_text)

    # ‚úÖ –ü–æ–¥–±–∏—Ä–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
    query = extract_keywords(title)
    image_url = fetch_image(f"{query} site:pinterest.com")

    if not image_url:
        log_warning("‚ö†Ô∏è –ù–∏ –æ–¥–∏–Ω –∏—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ –¥–∞–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!")

    full_body = ""

    try:
        if image_url and image_url.startswith("http"):
            log_info(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {image_url}")
            await bot.send_photo(chat_id=CHAT_ID, photo=image_url, caption=title)
            await asyncio.sleep(10)  # ‚úÖ –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–∞—É–∑—É –ø–µ—Ä–µ–¥ —Ç–µ–∫—Å—Ç–æ–º
            log_info(f"üì∏ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ –ø–æ —Ç–µ–º–µ: {popular_topic}")
        else:
            log_warning(f"‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ: {image_url}")
            await bot.send_message(chat_id=CHAT_ID, text=title)
            log_warning(f"üìù –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ –±–µ–∑ —Ñ–æ—Ç–æ: {popular_topic}")

        await asyncio.sleep(10)  # ‚úÖ –£–≤–µ–ª–∏—á–∏–ª–∏ –∑–∞–¥–µ—Ä–∂–∫—É

        full_body = "\n\n".join(body_parts)
        if len(full_body) > 4096:
            full_body = full_body[:4093] + "..."

        await bot.send_message(chat_id=CHAT_ID, text=full_body)
        log_info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ—Å—Ç –ø–æ —Ç–µ–º–µ: {popular_topic}")

    except Exception as e:
        log_error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—Å—Ç–∞: {e}")

        if "Pool timeout" in str(e):
            log_warning("‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø–æ–ø—ã—Ç–∫—É –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ Pool timeout")
            return

        await asyncio.sleep(10)

        try:
            if image_url and image_url.startswith("http"):
                log_info(f"üì§ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {image_url}")
                await bot.send_photo(chat_id=CHAT_ID, photo=image_url, caption=title)
            else:
                await bot.send_message(chat_id=CHAT_ID, text=title)

            await asyncio.sleep(5)
            await bot.send_message(chat_id=CHAT_ID, text=full_body)
            log_info(f"üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ—Å—Ç –ø–æ —Ç–µ–º–µ: {popular_topic}")

        except Exception as e:
            log_error(f"‚ö†Ô∏è –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–∞: {e}")
            await asyncio.sleep(30)
