import json
import datetime
import random
from keys import reaction_data_file
from content_improvements.topics import topics  # –ò–º–ø–æ—Ä—Ç —Å–ø–∏—Å–∫–∞ —Ç–µ–º

MIN_REACTIONS = 50  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∞–∫—Ü–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
REPLACE_THRESHOLD = 10  # –ï—Å–ª–∏ —Ç–µ–º–∞ 3 —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥ –Ω–∞–±–∏—Ä–∞–µ—Ç < 10 –ª–∞–π–∫–æ–≤ ‚Äî –æ–Ω–∞ —É–¥–∞–ª—è–µ—Ç—Å—è
TREND_BOOST = 2  # –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ç—Ä–µ–Ω–¥–æ–≤–æ–π —Ç–µ–º—ã


def load_reaction_data():
    """üîç –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ–∞–∫—Ü–∏—è—Ö –∏–∑ —Ñ–∞–π–ª–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π"""
    try:
        with open(reaction_data_file, "r") as file:
            data = json.load(file)
    except (FileNotFoundError, json.JSONDecodeError):
        return {}

    # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ `total_likes`, `total_comments`, `total_shares`, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º
    for topic in data.keys():
        if "total_likes" not in data[topic]:
            data[topic]["total_likes"] = 0
        if "total_comments" not in data[topic]:
            data[topic]["total_comments"] = 0
        if "total_shares" not in data[topic]:
            data[topic]["total_shares"] = 0

    save_reaction_data(data)  # ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    return data


def save_reaction_data(data):
    """üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª"""
    try:
        with open(reaction_data_file, "w") as file:
            json.dump(data, file, ensure_ascii=False, indent=4)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")


def update_reaction_data(topic, likes, comments, shares):
    """üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ —Ç–µ–º —Å —É—á—ë—Ç–æ–º –¥–∞—Ç—ã"""
    data = load_reaction_data()
    today = datetime.date.today().isoformat()

    if topic not in data:
        data[topic] = {"history": [], "total_likes": 0, "total_comments": 0, "total_shares": 0}

    # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    data[topic]["history"].append({"date": today, "likes": likes, "comments": comments, "shares": shares})
    data[topic]["total_likes"] += likes
    data[topic]["total_comments"] += comments
    data[topic]["total_shares"] += shares

    # ‚úÖ –•—Ä–∞–Ω–∏–º –∏—Å—Ç–æ—Ä–∏—é —Ç–æ–ª—å–∫–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
    data[topic]["history"] = [entry for entry in data[topic]["history"] if
                              (datetime.date.today() - datetime.date.fromisoformat(entry["date"])).days <= 7]

    save_reaction_data(data)


def get_most_popular_topic():
    """üì¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–∞–º–æ–π –ø–æ–ø—É–ª—è—Ä–Ω–æ–π —Ç–µ–º—ã —Å —É—á—ë—Ç–æ–º —Ç—Ä–µ–Ω–¥–æ–≤"""
    data = load_reaction_data()

    # ‚úÖ –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∏–ª–∏ –º–∞–ª–æ —Ä–µ–∞–∫—Ü–∏–π ‚Äî –≤—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ç–µ–º—É
    if not data or sum(topic["total_likes"] + topic["total_comments"] + topic["total_shares"] for topic in
                       data.values()) < MIN_REACTIONS:
        return random.choice(topics)  # –¢–µ–ø–µ—Ä—å –±–µ—Ä—ë–º —Å–ª—É—á–∞–π–Ω—É—é —Ç–µ–º—É –≤–º–µ—Å—Ç–æ –ø–µ—Ä–≤–æ–π

    # ‚úÖ –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ–º—ã –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
    sorted_topics = sorted(data.items(), key=lambda x: (
            x[1]["total_likes"] + x[1]["total_comments"] + x[1]["total_shares"]
    ), reverse=True)

    # ‚úÖ –ï—Å–ª–∏ —Ç–µ–º–∞ —Ä–µ–∑–∫–æ –≤—ã—Ä–æ—Å–ª–∞ –≤ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∑–∞ 3 –¥–Ω—è ‚Äî –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –µ–π
    trending_topics = [topic for topic, stats in sorted_topics if
                       len(stats["history"]) >= 3 and
                       stats["history"][-1]["likes"] > stats["history"][-3]["likes"] * TREND_BOOST]

    return trending_topics[0] if trending_topics else sorted_topics[0][0]


def replace_least_popular_topic():
    """üîÑ –ó–∞–º–µ–Ω—è–µ—Ç —Å–∞–º—É—é –Ω–µ–ø–æ–ø—É–ª—è—Ä–Ω—É—é —Ç–µ–º—É, –µ—Å–ª–∏ –æ–Ω–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ –Ω–µ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞"""
    data = load_reaction_data()
    if not data:
        return  # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–º–µ–Ω—è–µ–º

    # ‚úÖ –ò—â–µ–º —Ç–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ –Ω–∞–±–∏—Ä–∞–ª–∏ –º–∞–ª–æ –ª–∞–π–∫–æ–≤
    least_popular_topics = [topic for topic, stats in data.items() if
                            len(stats["history"]) >= 3 and
                            all(entry["likes"] < REPLACE_THRESHOLD for entry in stats["history"][-3:])]

    if least_popular_topics:
        topic_to_remove = least_popular_topics[0]
        new_topic = next((t for t in topics if t not in data), None)

        if new_topic:
            print(f"üîÑ –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–º—É '{topic_to_remove}' –Ω–∞ '{new_topic}'")
            del data[topic_to_remove]  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–µ–º—É
            data[new_topic] = {"history": [], "total_likes": 0, "total_comments": 0,
                               "total_shares": 0}  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é
            save_reaction_data(data)
