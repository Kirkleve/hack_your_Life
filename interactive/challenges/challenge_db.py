"""
–§–∞–π–ª –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —á–µ–ª–ª–µ–Ω–¥–∂–µ–π.

üîπ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã: –°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—ã `challenges` –∏ `challenge_days`, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.
üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–µ–ª–ª–µ–Ω–¥–∂–∞: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–π —á–µ–ª–ª–µ–Ω–¥–∂.
üîπ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —á–µ–ª–ª–µ–Ω–¥–∂–∞: –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —á–µ–ª–ª–µ–Ω–¥–∂ –≤ –±–∞–∑—É –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –µ–≥–æ.
üîπ –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å—Ç–∞—Ä—ã—Ö —á–µ–ª–ª–µ–Ω–¥–∂–µ–π: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π —á–µ–ª–ª–µ–Ω–¥–∂ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –Ω–æ–≤–æ–≥–æ.
üîπ –ó–∞–ø–∏—Å—å –¥–Ω–µ–π —á–µ–ª–ª–µ–Ω–¥–∂–∞: –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è.
üîπ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è (—Å–æ–∑–¥–∞–Ω–∏–µ, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–Ω–µ–π, –∞–∫—Ç–∏–≤–∞—Ü–∏—è).
"""

import os
import sqlite3
from datetime import datetime, timedelta

from logger import log_info

BASE_DIR = os.path.dirname(os.path.abspath(__file__))
DB_PATH = os.path.join(BASE_DIR, "challenges.db")


def init_db():
    """–°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç"""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    cursor.execute("""
    CREATE TABLE IF NOT EXISTS challenges (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT,
        description TEXT,
        announcement TEXT,
        start_date TEXT,
        end_date TEXT,
        last_used INTEGER DEFAULT 0,
        is_active INTEGER DEFAULT 0,
        pinned_message_id INTEGER DEFAULT NULL  -- ‚úÖ –î–æ–±–∞–≤–∏–ª–∏ –ø–æ–ª–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    )
    """)

    cursor.execute("""
    CREATE TABLE IF NOT EXISTS challenge_days (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        challenge_id INTEGER,
        day_number INTEGER,
        text TEXT,
        FOREIGN KEY (challenge_id) REFERENCES challenges(id)
    )
    """)

    conn.commit()
    conn.close()
    log_info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")


def get_active_challenge():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π —á–µ–ª–ª–µ–Ω–¥–∂."""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM challenges WHERE is_active = 1")
    challenge = cursor.fetchone()
    conn.close()
    return challenge


def start_new_challenge(name, description, announcement, days):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —á–µ–ª–ª–µ–Ω–¥–∂ –∏ –¥–µ–ª–∞–µ—Ç –µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã–º."""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    end_date = (datetime.now() + timedelta(days=6)).strftime("%Y-%m-%d")

    log_info(f"üìå –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —á–µ–ª–ª–µ–Ω–¥–∂: {name}")

    cursor.execute("UPDATE challenges SET is_active = 0 WHERE is_active = 1")  # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–π —á–µ–ª–ª–µ–Ω–¥–∂
    cursor.execute("INSERT INTO challenges (name, description, announcement, start_date, end_date, is_active) VALUES (?, ?, ?, ?, ?, 1)",
                   (name, description, announcement, datetime.now().strftime("%Y-%m-%d"), end_date))

    challenge_id = cursor.lastrowid  # ID –Ω–æ–≤–æ–≥–æ —á–µ–ª–ª–µ–Ω–¥–∂–∞

    for day_number, text in enumerate(days, 1):
        log_info(f"‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–Ω—å {day_number}: {text[:50]}...")
        cursor.execute("INSERT INTO challenge_days (challenge_id, day_number, text) VALUES (?, ?, ?)",
                       (challenge_id, day_number, text))

    conn.commit()
    conn.close()

    log_info(f"üéâ –ß–µ–ª–ª–µ–Ω–¥–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! ID: {challenge_id}")
    return challenge_id
