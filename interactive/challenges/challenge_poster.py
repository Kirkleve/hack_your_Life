"""
–§–∞–π–ª –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –∑–∞–¥–∞–Ω–∏–π —á–µ–ª–ª–µ–Ω–¥–∂–∞ –≤ Telegram-–∫–∞–Ω–∞–ª–µ.

üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–µ–ª–ª–µ–Ω–¥–∂–∞: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–æ–π —á–µ–ª–ª–µ–Ω–¥–∂ —Å–µ–π—á–∞—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è.
üîπ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.
üîπ –û—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: –°–Ω–∏–º–∞–µ—Ç –∑–∞–∫—Ä–µ–ø —Å –ø—Ä–æ—à–ª–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π –Ω–æ–≤–æ–≥–æ.
üîπ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–¥–∞–Ω–∏—è: –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–¥–∞–Ω–∏–µ–º –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å.
üîπ –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: –ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–º –≤ —á–∞—Ç–µ.
üîπ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —á–µ–ª–ª–µ–Ω–¥–∂–∞: –ö–æ–≥–¥–∞ —á–µ–ª–ª–µ–Ω–¥–∂ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è, –∑–∞–∫—Ä–µ–ø —Å–Ω–∏–º–∞–µ—Ç—Å—è.
üîπ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —É—Å–ø–µ—à–Ω—ã–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏.
"""

import sqlite3
from telegram import Bot
from keys import TELEGRAM_BOT_TOKEN, CHAT_ID
from interactive.challenges.challenge_db import get_active_challenge, DB_PATH
from logger import log_info, log_error

bot = Bot(token=TELEGRAM_BOT_TOKEN)


async def unpin_old_challenge():
    """üîπ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å–Ω–∏–º–∞–µ—Ç —Å—Ç–∞—Ä–æ–µ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    cursor.execute("SELECT pinned_message_id FROM challenges WHERE is_active = 1")
    pinned_message = cursor.fetchone()

    conn.close()

    if pinned_message and pinned_message[0]:
        try:
            await bot.unpin_chat_message(chat_id=CHAT_ID, message_id=pinned_message[0])
            log_info("üìå –°—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —á–µ–ª–ª–µ–Ω–¥–∂–µ–º –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–æ.")
        except Exception as e:
            log_error(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


async def post_challenge():
    """üì¢ –ü—É–±–ª–∏–∫—É–µ—Ç –∑–∞–¥–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è —á–µ–ª–ª–µ–Ω–¥–∂–∞ –≤ Telegram-–∫–∞–Ω–∞–ª–µ"""
    challenge = get_active_challenge()

    if not challenge:
        log_error("‚ö† –û—à–∏–±–∫–∞: –ê–∫—Ç–∏–≤–Ω—ã–π —á–µ–ª–ª–µ–Ω–¥–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    log_info(f"‚úÖ –ù–∞–π–¥–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π —á–µ–ª–ª–µ–Ω–¥–∂: {challenge[1]} (ID: {challenge[0]})")

    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    cursor.execute("SELECT COUNT(*) FROM challenge_days WHERE challenge_id = ?", (challenge[0],))
    total_days = cursor.fetchone()[0]

    cursor.execute("SELECT start_date FROM challenges WHERE id = ?", (challenge[0],))
    start_date = cursor.fetchone()[0]

    from datetime import datetime, timedelta
    today = datetime.now().date()
    start_date = datetime.strptime(start_date, "%Y-%m-%d").date()
    day_number = (today - start_date).days + 1

    if day_number > total_days:
        log_info("üèÅ –ß–µ–ª–ª–µ–Ω–¥–∂ –∑–∞–≤–µ—Ä—à—ë–Ω! –£–±–∏—Ä–∞–µ–º –∑–∞–∫—Ä–µ–ø.")
        await unpin_old_challenge()  # ‚úÖ –¢–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ–º —Å `await`
        return

    cursor.execute("SELECT text FROM challenge_days WHERE challenge_id = ? AND day_number = ?",
                   (challenge[0], day_number))
    task = cursor.fetchone()

    conn.close()

    if not task:
        log_error("‚ö† –û—à–∏–±–∫–∞: –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
        return

    log_info(f"üì¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ–ª–ª–µ–Ω–¥–∂–∞: {challenge[1]} (–î–µ–Ω—å {day_number})")

    try:
        await unpin_old_challenge()  # ‚úÖ –¢–µ–ø–µ—Ä—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π `await`
        msg = await bot.send_message(chat_id=CHAT_ID, text=f"üî• {challenge[1]}\n\n{task[0]}")
        await bot.pin_chat_message(chat_id=CHAT_ID, message_id=msg.message_id)

        log_info(f"üìå –ß–µ–ª–ª–µ–Ω–¥–∂ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ –∑–∞–∫—Ä–µ–ø–ª—ë–Ω: {msg.message_id}")

        # ‚úÖ –ó–∞–ø–∏—Å—ã–≤–∞–µ–º ID –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑—É
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()
        cursor.execute("UPDATE challenges SET pinned_message_id = ? WHERE id = ?", (msg.message_id, challenge[0]))
        conn.commit()
        conn.close()

    except Exception as e:
        log_error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —á–µ–ª–ª–µ–Ω–¥–∂–∞: {e}")
