import sqlite3
import os

DB_PATH = os.path.join(os.path.dirname(__file__), "post_history.db")


def init_db():
    """üìÇ –°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ—Å—Ç–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç"""
    with sqlite3.connect(DB_PATH) as conn:
        cursor = conn.cursor()
        cursor.execute(
            """CREATE TABLE IF NOT EXISTS post_history (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                post_text TEXT UNIQUE
            )"""
        )
        conn.commit()


def is_duplicate_post(new_post):
    """üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª –ª–∏ —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω —ç—Ç–æ—Ç –ø–æ—Å—Ç"""
    with sqlite3.connect(DB_PATH) as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT 1 FROM post_history WHERE post_text = ?", (new_post,))
        return cursor.fetchone() is not None


def add_post_to_history(new_post):
    """‚úÖ –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ—Å—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é"""
    with sqlite3.connect(DB_PATH) as conn:
        cursor = conn.cursor()
        cursor.execute("INSERT OR IGNORE INTO post_history (post_text) VALUES (?)", (new_post,))
        conn.commit()


def clear_old_posts(limit=100):
    """üóë –û—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 –ø–æ—Å—Ç–æ–≤, —É–¥–∞–ª—è—è —Å—Ç–∞—Ä—ã–µ"""
    with sqlite3.connect(DB_PATH) as conn:
        cursor = conn.cursor()
        cursor.execute(
            "DELETE FROM post_history WHERE id NOT IN (SELECT id FROM post_history ORDER BY id DESC LIMIT ?)",
            (limit,),
        )
        conn.commit()


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
init_db()
